---
elasticsearchPUBLICBASEURL: ""
elasticsearchURL: ""
serverHost: "0.0.0.0"

replicas: 1

image: "cr.yandex/crpcm9tg75s8gu2hqkp9/kibana"
imageTag: "7.16.1"
imagePullPolicy: "IfNotPresent"

labels: {}

annotations: {}

podAnnotations: {}

resources:
  requests:
    cpu: "100m"
    memory: "300Mi"
  limits:
    cpu: "800m"
    memory: "2Gi"

protocol: http

healthCheckPath: "/app/kibana"

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

automountToken: true

httpPort: 5601

updateStrategy:
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  type: RollingUpdate

service:
  type: ClusterIP
  loadBalancerIP: ""
  port: 5601
  nodePort: ""
  labels: {}
  annotations: {}
  loadBalancerSourceRanges: []
  httpPortName: http

ingress:
  enabled: false
  className: "nginx"
  pathtype: ImplementationSpecific
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: kibana-example.local
      paths:
        - path: /
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

imagePullSecrets:
- name: sirius-registry

nodeSelector: {}

tolerations: []

affinity: {}

nameOverride: ""
fullnameOverride: ""
